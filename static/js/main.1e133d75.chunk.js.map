{"version":3,"sources":["components/Container.js","components/MessageCard.js","components/ChatCard.js","components/Video.js","components/VideoContainer.js","components/InputMessage.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","container","width","height","display","flexDirection","background","chatVideo","Container","React","forwardRef","videoContainer","inputMessage","classes","Box","className","avatarContainer","margin","avatar","card","opacity","wordBreak","messageContainer","minWidth","message","lineHeight","padding","fontSize","color","author","fontWeight","MessageCard","Card","Avatar","Typography","style","overflow","justifyContent","FadeCard","useState","visible","setVisible","useEffect","setTimeout","when","ChatCard","ref","messages","map","idx","indexToShow","length","msg","key","video","position","Video","srcVideo","lastVideo","setLastVideo","localStorage","getItem","controls","src","autoPlay","type","alignItems","chatContainer","marginLeft","VideoContainer","containerInput","border","borderRadius","emoji","submit","input","validInternCommands","palette","myColor","Math","round","random","InputMessage","sendMessage","inputMessageRef","useRef","submitMessage","inputRef","value","charCode","trim","split","command","match","internCommand","argument","includes","setItem","commandHandler","JSON","stringify","current","IconButton","aria-label","size","InputBase","placeholder","onKeyPress","target","App","setSrcVideo","messageHistory","setMessageHistory","STATIC_OPTIONS","useMemo","onOpen","console","log","shouldReconnect","closeEvent","useWebSocket","lastMessage","containerRef","last","parse","data","prev","scrollTop","retrieveMessage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1e133d75.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n  container: {\n    width: '100%',\n    height: ' 100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    background: 'black'\n  },\n  chatVideo: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n    height: '100vh'\n  },\n});\n\nconst Container = React.forwardRef(({ videoContainer, inputMessage }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.container}>\n      <Box className={classes.chatVideo}>\n        {videoContainer}\n      </Box>\n      {inputMessage}\n    </Box>\n  );\n});\n\nexport default Container\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  avatarContainer: {\n    background: 'transparent',\n    display: 'flex',\n    margin: '5px'\n  },\n  avatar: {\n    width: 30,\n    height: 30\n  },\n  card: {\n    background: '#0000007d',\n    display: 'flex',\n    opacity: '1',\n    wordBreak: 'break-all'\n  },\n  messageContainer: {\n    margin: 'auto 4px',\n    minWidth: 50\n  },\n  message: {\n    lineHeight: '1.225',\n    display: 'flex',\n    margin: '5px 0px',\n    padding: '0px 4px',\n    fontSize: '0.8rem',\n    color: 'white'\n  },\n  author: {\n    lineHeight: '1.225',\n    display: 'flex',\n    margin: '4px 0px 0px 3px',\n    fontSize: '0.8rem',\n    color: '#20d0a8',\n    fontWeight: 'bold'\n  }\n});\n\n\n\n\nfunction MessageCard({ message, author, color, avatar }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      { avatar && <Box className={classes.avatarContainer}>\n        <Avatar className={classes.avatar} />\n      </Box> }\n      <Box className={classes.messageContainer}>\n        <Typography className={classes.author}\n                    style={{ color: color }}>\n          {author}\n        </Typography>\n        <Typography className={classes.message}>\n          {message}\n        </Typography>\n      </Box>\n    </Card >\n  )\n}\n\nexport default MessageCard\n","import React, { useEffect, useState } from 'react'\nimport Fade from 'react-reveal/Fade';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MessageCard from './MessageCard'\n\nconst useStyles = makeStyles({\n  container: {\n    width: '40vh',\n    background: 'transparent',\n    display: 'flex',\n    overflow: 'scroll',\n    flexDirection: 'column'\n  },\n  messageContainer: {\n    margin: '8px 5px 0px 5px',\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n});\n\nconst TIME_TO_DISAPPEAR = 65000000;\n\nconst FadeCard = ({ message, author, color, avatar }) => {\n  const { messageContainer } = useStyles();\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setVisible(true);\n    setTimeout(() => {\n      setVisible(false);\n    }, TIME_TO_DISAPPEAR);\n  }, []);\n\n  return (\n    <>\n      <Fade when={visible}>\n        <Box className={messageContainer}>\n          <MessageCard message={message} author={author} color={color} avatar={avatar}/>\n        </Box>\n      </Fade>\n    </>);\n};\n\nconst ChatCard = React.forwardRef(({ messages }, ref) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container} ref={ref}>\n      {\n        messages.map((message, idx) => {\n          const indexToShow = messages.length > 20 ? messages.length - 20 : 0;\n\n          return message.msg && idx >= indexToShow &&\n            <FadeCard key={idx}\n                      message={message.msg}\n                      author={message.author}\n                      color={message.color}\n                      avatar={message.avatar}\n            />\n        })\n      }\n    </div>\n  )\n});\n\nexport default ChatCard\n","import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  video: {\n    height: '92vh',\n    position: 'absolute',\n    width: '100%'\n  }\n})\n\nconst Video = ({ srcVideo }) => {\n  const [ lastVideo, setLastVideo ] = useState('');\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setLastVideo(localStorage.getItem('last-video'));\n  }, [])\n\n  return (\n    <video controls={true} className={classes.video} src={ srcVideo || lastVideo } autoPlay={true}>\n      <source\n        src={srcVideo || lastVideo}\n        type=\"video/mp4\" />\n    </video>\n  )\n};\n\nexport default Video\n","import React from 'react'\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChatCard from './ChatCard';\nimport Video from './Video'\n\nconst useStyles = makeStyles({\n  videoContainer: {\n    width: '100%',\n    height: '92vh',\n    background: 'black',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  chatContainer: {\n    position: 'relative',\n    height: '70%',\n    display: 'flex',\n    marginLeft: 25\n  }\n});\n\nconst VideoContainer = React.forwardRef(({ messages, srcVideo }, ref) => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.videoContainer} >\n      <Video srcVideo={srcVideo} />\n      <Box className={classes.chatContainer}>\n        <ChatCard messages={messages} ref={ref} />\n      </Box>\n    </Box >\n  )\n});\n\nexport default VideoContainer\n","import React, { useRef } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, InputBase } from '@material-ui/core';\nimport MoodIcon from '@material-ui/icons/Mood';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles({\n  containerInput: {\n    width: '35%',\n    background: '#0d0d0d',\n    display: 'flex',\n    flexDirection: 'row',\n    border: '1px solid #5a5a5a',\n    borderRadius: '5px',\n    margin: '10px auto'\n  },\n  emoji: {\n    width: '50px',\n    background: 'transparent',\n    color: '#c0c0c0',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  submit: {\n    width: '50px',\n    background: 'transparent',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#c0c0c0'\n  },\n  input: {\n    width: '95%',\n    color: '#c0c0c0',\n  }\n});\n\nconst validInternCommands = ['name'];\n\nconst palette = [\n  '#0baf15', '#FD5B78', '#FF6037',\n  '#FF9966', '#FF9933', '#FFCC33',\n  '#FFFF66', '#CCFF00', '#66FF66',\n  '#50BFE6', '#FF6EFF', '#20d0a8'];\n\nconst myColor = palette[Math.round(Math.random() * palette.length)];\n\nconst InputMessage = ({ sendMessage } ) => {\n  const classes = useStyles();\n\n  const inputMessageRef = useRef('');\n\n  const commandHandler = (validInternCommands, command) => {\n    const [, internCommand, argument] = command.match(/^\\/(\\w*)\\s(.*)/);\n\n    if (validInternCommands.includes(internCommand)) {\n      if (internCommand === 'name') {\n        localStorage.setItem('user-name', argument);\n      }\n    }\n  }\n\n  const submitMessage = ({ value, charCode }, inputRef) => {\n    const message = value.trim();\n\n    if (charCode === 13 && message !== '') {\n      const isNameCommand = message.split('/name')[1];\n\n      if (isNameCommand) {\n        commandHandler(validInternCommands, message);\n      } else {\n        sendMessage(JSON.stringify({ msg: message, color: myColor, author: localStorage.getItem('user-name') || 'Anonymous' }));\n      }\n\n      inputRef.current.value = '';\n    }\n  };\n  return (\n    <Box className={classes.containerInput}>\n      <IconButton className={classes.emoji} aria-label='emoji'>\n        <MoodIcon size='small' />\n      </IconButton>\n      <InputBase className={classes.input}\n                 placeholder='Write a message'\n                 onKeyPress={({ target: { value }, charCode }) => submitMessage({ value, charCode }, inputMessageRef )}\n                 inputRef={inputMessageRef}/>\n      <IconButton className={classes.submit} aria-label='send'>\n        <SendIcon size='small' />\n      </IconButton>\n    </Box>\n  )\n};\n\nexport default InputMessage\n","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport useWebSocket from 'react-use-websocket';\n\nimport Container from './components/Container';\nimport VideoContainer from './components/VideoContainer';\nimport InputMessage from './components/InputMessage';\n\nconst App = () => {\n  const [srcVideo, setSrcVideo] = useState('');\n  const [messageHistory, setMessageHistory] = useState([]);\n\n  const SOCKET_URL = 'wss://mighty-sea-25999.herokuapp.com/ws';\n\n  const STATIC_OPTIONS = useMemo(() => ({\n    onOpen: () => console.log('Connection opened!'),\n    shouldReconnect: (closeEvent) => true, //Will attempt to reconnect on all close events, such as server shutting down\n  }), []);\n\n  const [sendMessage, lastMessage] = useWebSocket(SOCKET_URL, STATIC_OPTIONS);\n\n  const containerRef = useRef('');\n\n  const retrieveMessage = (message, containerRef) => {\n    setMessageHistory(prev => {\n      return [...prev, message]\n    });\n\n    setTimeout(() => {\n      containerRef.current.scrollTop = 10000000000000000000000;\n    }, 150);\n  };\n\n  const retrieveCommand = (message) => {\n    if (message.command === 'video') {\n      console.log(message.argument);\n      localStorage.setItem('last-video', message.argument);\n      setSrcVideo(message.argument);\n    }\n  };\n\n  useEffect(() => {\n    if (lastMessage !== null) {\n      const last = JSON.parse(lastMessage.data);\n\n      last.msg ? retrieveMessage(last, containerRef) : retrieveCommand(last);\n    }\n  }, [lastMessage]);\n\n  return (\n    <div className=\"App\">\n      <Container\n        inputMessage={<InputMessage sendMessage={sendMessage} />}\n        videoContainer={<VideoContainer messages={messageHistory} srcVideo={srcVideo} ref={containerRef} />} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}